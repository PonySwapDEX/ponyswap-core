/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IPonyCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPonyCallee__factory>;
    getContractFactory(
      name: "IPonyERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPonyERC20__factory>;
    getContractFactory(
      name: "IPonyFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPonyFactory__factory>;
    getContractFactory(
      name: "IPonyPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPonyPair__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "PonyERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PonyERC20__factory>;
    getContractFactory(
      name: "PonyFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PonyFactory__factory>;
    getContractFactory(
      name: "PonyPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PonyPair__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;

    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IPonyCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPonyCallee>;
    getContractAt(
      name: "IPonyERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPonyERC20>;
    getContractAt(
      name: "IPonyFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPonyFactory>;
    getContractAt(
      name: "IPonyPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPonyPair>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "PonyERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PonyERC20>;
    getContractAt(
      name: "PonyFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PonyFactory>;
    getContractAt(
      name: "PonyPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PonyPair>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
